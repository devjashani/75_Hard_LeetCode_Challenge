class Solution {
    public int rob(int[] nums) {
        if (nums.length == 0) return 0;
        if (nums.length == 1) return nums[0];


        int robFirstSkipLast = robHelper(nums, 0, nums.length - 2);
        int skipFirstRobLast = robHelper(nums, 1, nums.length - 1);


        return Math.max(robFirstSkipLast, skipFirstRobLast);
    }

    private int robHelper(int[] nums, int start, int end) {
        int prevMax = 0;
        int result = 0;

        for (int i = start; i <= end; i++) {
            int temp = result;
            result = Math.max(result, prevMax + nums[i]);
            prevMax = temp;
        }

        return result;
    }
}
